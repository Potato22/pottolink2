---
const heroImages = [
  { url: "/imgs/warm_snow.jpg", pos: "50% 20%" },
  { url: "/imgs/old_station.jpg", pos: "center" },
  { url: "/imgs/just.jpg", pos: "50% 25%" },
  { url: "/imgs/prod_sb.jpg", pos: "center" },
  { url: "/imgs/trainstation.jpg", pos: "center" },
];
// MAX 5
---

<div id="hello">
  <div class="heroimage" id="heroSlideshow">
    {
      heroImages.map((image) => (
        <div
          style={`background-image:url(${image.url}); background-position:${image.pos}`}
        />
      ))
    }
  </div>
  <div class="hero" id="hero">
    <div class="commlogo">
      <svg id="Layer_1" viewBox="0 0 154.74345 132.29166">
        <defs>
          <style></style>
        </defs>
        <g id="layer1" transform="translate(108.90896,-397.83408)">
          <path
            id="path836"
            style="fill:#ffffff"
            transform="matrix(0.26458334,0,0,0.26458334,-108.90896,397.83408)"
            d="m 290.0918,391.38477 v 95.22656 h 16.77929 v -39.4336 h 24.05079 c 3.63564,0 7.03945,-0.65192 10.20898,-1.95703 3.16953,-1.30511 5.87206,-3.12259 8.10937,-5.45312 2.33054,-2.42378 4.14803,-5.17369 5.45313,-8.25 1.39832,-3.16955 2.09766,-6.52592 2.09766,-10.06836 v -4.19531 c 0,-3.54244 -0.69934,-6.89885 -2.09766,-10.06836 -1.3051,-3.16955 -3.12259,-5.91947 -5.45313,-8.25 -2.23731,-2.33057 -4.93984,-4.14802 -8.10937,-5.45313 -3.16953,-1.39831 -6.57334,-2.09765 -10.20898,-2.09765 z m 153.11523,0 v 24.05078 H 430.0625 v 16.08203 h 13.14453 v 55.09375 h 16.5 v -55.09375 h 13.14453 v -16.08203 h -13.14453 v -24.05078 z m 47.54297,0 v 24.05078 h -13.14453 v 16.08203 H 490.75 v 55.09375 h 16.5 v -55.09375 h 13.14453 V 415.43555 H 507.25 V 391.38477 Z M 306.87109,408.02539 H 328.125 c 4.00853,0 6.94612,1.07271 8.81055,3.2168 1.86443,2.05088 2.79687,4.75342 2.79687,8.10937 0,3.54244 -0.93244,6.29236 -2.79687,8.25 -1.86443,1.95765 -4.80202,2.9375 -8.81055,2.9375 h -21.25391 z m 84.31836,7.41016 c -4.00852,0 -7.64349,0.65387 -10.90625,1.95898 -3.26275,1.21187 -6.06008,2.9365 -8.39062,5.17383 -2.23732,2.23729 -3.96195,4.93982 -5.17383,8.10937 -1.11866,3.16955 -1.67773,6.75905 -1.67773,10.76758 v 19.15625 c 0,3.91533 0.55907,7.50483 1.67773,10.76758 1.21188,3.16951 2.93651,5.91943 5.17383,8.25 2.33054,2.23729 5.12787,3.96192 8.39062,5.17383 3.26276,1.21187 6.89773,1.81836 10.90625,1.81836 h 5.73438 c 4.10175,0 7.73672,-0.60649 10.90625,-1.81836 3.26275,-1.21191 6.01268,-2.93654 8.25,-5.17383 2.33054,-2.33057 4.10257,-5.08049 5.31445,-8.25 1.21188,-3.26275 1.81641,-6.85225 1.81641,-10.76758 v -19.15625 c 0,-4.00853 -0.60453,-7.59803 -1.81641,-10.76758 -1.21188,-3.16955 -2.98391,-5.87208 -5.31445,-8.10937 -2.23732,-2.23733 -4.98725,-3.96196 -8.25,-5.17383 -3.16953,-1.30511 -6.8045,-1.95898 -10.90625,-1.95898 z m 161.64649,0 c -4.00853,0 -7.64545,0.65387 -10.90821,1.95898 -3.26275,1.21187 -6.05813,2.9365 -8.38867,5.17383 -2.23732,2.23729 -3.96195,4.93982 -5.17383,8.10937 -1.11866,3.16955 -1.67773,6.75905 -1.67773,10.76758 v 19.15625 c 0,3.91533 0.55907,7.50483 1.67773,10.76758 1.21188,3.16951 2.93651,5.91943 5.17383,8.25 2.33054,2.23729 5.12592,3.96192 8.38867,5.17383 3.26276,1.21187 6.89968,1.81836 10.90821,1.81836 h 5.73242 c 4.10175,0 7.73671,-0.60649 10.90625,-1.81836 3.26275,-1.21191 6.01463,-2.93654 8.25195,-5.17383 2.33054,-2.33057 4.10062,-5.08049 5.3125,-8.25 1.21188,-3.26275 1.81836,-6.85225 1.81836,-10.76758 v -19.15625 c 0,-4.00853 -0.60648,-7.59803 -1.81836,-10.76758 -1.21188,-3.16955 -2.98196,-5.87208 -5.3125,-8.10937 -2.23732,-2.23733 -4.9892,-3.96196 -8.25195,-5.17383 -3.16954,-1.30511 -6.8045,-1.95898 -10.90625,-1.95898 z m -161.64649,16.08203 h 5.73438 c 2.98309,0 5.4051,0.9779 7.26953,2.93554 1.95765,1.86445 2.9375,4.33581 2.9375,7.41211 v 18.17774 c 0,3.07631 -0.97985,5.59314 -2.9375,7.55078 -1.86443,1.95764 -4.28644,2.9375 -7.26953,2.9375 h -5.73438 c -2.88986,0 -5.35928,-0.97986 -7.41015,-2.9375 -1.95766,-1.95764 -2.9375,-4.47447 -2.9375,-7.55078 v -18.17774 c 0,-3.0763 0.97984,-5.54766 2.9375,-7.41211 2.05087,-1.95764 4.52029,-2.93554 7.41015,-2.93554 z m 161.64649,0 h 5.73242 c 2.98309,0 5.40705,0.9779 7.27148,2.93554 1.95766,1.86445 2.9375,4.33581 2.9375,7.41211 v 18.17774 c 0,3.07631 -0.97984,5.59314 -2.9375,7.55078 -1.86443,1.95764 -4.28839,2.9375 -7.27148,2.9375 h -5.73242 c -2.88987,0 -5.36124,-0.97986 -7.41211,-2.9375 -1.95765,-1.95764 -2.93555,-4.47447 -2.93555,-7.55078 v -18.17774 c 0,-3.0763 0.9779,-5.54766 2.93555,-7.41211 2.05087,-1.95764 4.52224,-2.93554 7.41211,-2.93554 z M 103.16795,0 C 46.012874,0 0,46.012874 0,103.16795 v 293.66407 c 0,57.15507 46.012874,103.16794 103.16795,103.16794 h 115.8828 c 17.14655,0 30.94923,-13.80461 30.94923,-30.95115 v -88.09962 c 0,-17.1465 13.80465,-30.94922 30.95119,-30.94922 h 115.88085 c 57.15507,0 103.16794,-46.01284 103.16794,-103.16795 V 103.16795 C 499.99996,46.012874 453.98709,0 396.83202,0 Z m 0,37.999974 h 293.66407 c 36.12306,0 65.16797,29.044912 65.16797,65.167976 v 133.94921 c 0,41.4856 -33.39727,74.88283 -74.88283,74.88283 H 280.95117 c -38.17678,0 -68.95116,30.76948 -68.95116,68.9492 v 50.09961 c 0,17.14654 -13.80272,30.95119 -30.94923,30.95119 h -77.88283 c -36.123064,0 -65.167938,-29.04491 -65.167938,-65.16797 V 103.16795 c 0,-36.123064 29.044874,-65.167976 65.167938,-65.167976 z"
          ></path>
        </g>
      </svg>
    </div>
    <!-- <div class="dialogue" data-aos-duration="500" data-aos-easing="sleek" data-aos="fade-right"
            data-aos-delay="100">Sheridan</div> -->
  </div>
</div>

<a href="#about">
  <div class="forwarder" id="forwarder">
    <div class="arrowClip" id="arrowClip">
      <div class=`arrow material-symbols-rounded`>arrow_downward</div>
    </div>
  </div>
</a>

<script>
  function heroTransition() {
    const forwarder = document.getElementById("forwarder");
    const arrow = document.getElementById("arrowClip");
    const heroElm = document.getElementById("hero");
    const heroSlideshow = document.getElementById("heroSlideshow");
    const maxRounding = 99;
    const scrollPosition = window.scrollY;
    const windowHeight = window.innerHeight;

    const offset = windowHeight * 0.2; // 8%
    const roundness = Math.max(
      0,
      maxRounding - ((scrollPosition + offset) / windowHeight) * maxRounding
    );
    const heroOpacity = 1 - window.scrollY / (window.innerHeight - offset * 4);
    const heroScale = 1 - Math.min(0.5, window.scrollY / window.innerHeight);
    const slideshowOpacity = 1 - window.scrollY / window.innerHeight;
    const arrowOpacity = 1 - window.scrollY / (window.innerHeight - offset * 2);

    // TIL ? is a null checker
    forwarder?.style.setProperty("--topRounding", `${roundness}px`);
    heroElm?.style.setProperty("opacity", `${heroOpacity}`);
    heroElm?.style.setProperty("transform", `scale(${heroScale})`);
    heroSlideshow?.style.setProperty("opacity", `${slideshowOpacity}`);
    arrow?.style.setProperty("opacity", `${arrowOpacity}`);

    if (slideshowOpacity <= 0) {
      heroSlideshow?.style.setProperty("display", "none");
    } else {
      heroSlideshow?.style.setProperty("display", "flex");
    }
  }

  window.addEventListener("scroll", heroTransition);
  heroTransition();

  document.addEventListener("astro:before-swap", () => {
    heroTransition();
  });
</script>

<!-- hero -->
<style lang="scss">
  @use "../../../src/styles/_mixins" as *;
  #hello {
    position: fixed;
    top: 0;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    display: grid;
    place-items: center;
    z-index: -1;
    user-select: none;
    @include breakpoint(tiny, mobile) {
      height: 10vh;
      //display: none;
      place-items: center start;
      padding-left: 1em;
    }
  }

  .hero {
    position: relative;

    /*margin-right: 40%;*/
    color: var(--white);
  }

  .commlogo {
    --logoSize: 300px;
    width: var(--logoSize);
    height: var(--logoSize);
    .logoBase {
      fill: white;
    }
    .logoText {
      fill: black;
    }

    @include breakpoint(tiny, mobile) {
      --logoSize: 60px;
      .logoBase {
        fill: var(--fore);
      }
      .logoText {
        fill: var(--base);
      }
    }
  }

  .theactualhello {
    font-family: var(--display);
    font-size: 6rem;
    font-weight: 800;
  }

  .dialogue {
    font-family: var(--display);
    font-size: 2rem;
    font-weight: 700;
  }

  .uh {
    font-family: var(--contentsecondary);
  }

  .forwarder {
    position: absolute;
    background: var(--base);
    transition: background 0.2s var(--sleek);
    width: 100%;
    height: 8%;
    bottom: 0;
    border-radius: var(--topRounding) var(--topRounding) 0 0;
    display: grid;
    place-items: center;
    @include breakpoint(tiny, mobile) {
      display: none;
    }
  }
  .arrowClip {
    overflow: hidden;
    width: 50px;
    height: 50px;
    position: relative;
    text-align: center;
    border: 4px solid var(--fore);
    box-sizing: content-box;
    border-radius: 15px;
  }
  .arrow {
    font-size: 3rem;
    animation: clipDown 1s linear infinite;
    color: var(--fore);
  }
  .noAnim {
    animation: none;
  }
  @keyframes clipDown {
    0% {
      transform: translateY(-50px);
      animation-timing-function: cubic-bezier(0.24, 0.01, 0.01, 1); // fast
    }
    50% {
      transform: translateY(0px);
      animation-timing-function: cubic-bezier(0.72, 0.06, 0.96, 0.57); // accel
    }
    100% {
      transform: translateY(50px);
    }
  }

  .heroimage {
    position: absolute;
    z-index: -1;
    height: 100vh;
    overflow: hidden;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    filter: brightness(0.5);
    @include breakpoint(tiny, mobile) {
      display: none !important;
    }

    > div {
      width: 100%;
      height: 100%;
      background-size: cover;
      background-position: center;
      position: absolute;
      animation: heroimage 25s var(--sleek) infinite;
      opacity: 0;
      transform: scale(1.2);
    }
  }

  .heroimage > div {
    &:nth-child(2) {
      animation-delay: 5s;
    }

    &:nth-child(3) {
      animation-delay: 10s;
    }

    &:nth-child(4) {
      animation-delay: 15s;
    }

    &:nth-child(5) {
      animation-delay: 20s;
    }
  }

  @keyframes heroimage {
    10% {
      opacity: 1;
    }

    20% {
      opacity: 1;
    }

    30% {
      opacity: 0;
    }

    40% {
      transform: scale(1);
    }
  }
</style>

<script></script>
